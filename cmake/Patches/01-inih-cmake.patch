diff --git a/config.cmake.in b/config.cmake.in
new file mode 100644
index e69de29..1700541 100644
--- /dev/null
+++ b/config.cmake.in
@@ -0,0 +1,4 @@
+@PACKAGE_INIT@
+
+include(${CMAKE_CURRENT_LIST_DIR}/@targets_export_name@.cmake)
+check_required_components(inih)

diff --git a/CMakeLists.txt b/CMakeLists.txt
new file mode 100644
index e69de29..1700541 100644
--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,40 @@
+project(inih)
+
+set(inih_SOURCES ini.c ini.h cpp/INIReader.h cpp/INIReader.cpp)
+add_library(inih STATIC ${inih_SOURCES})
+
+set_property(TARGET inih PROPERTY
+    INTERFACE_INCLUDE_DIRECTORIES "$<INSTALL_INTERFACE:include>")
+
+include(CMakePackageConfigHelpers)
+set(config_install_dir lib/cmake/inih)
+set(version_config ${PROJECT_BINARY_DIR}/inih-config-version.cmake)
+set(project_config ${PROJECT_BINARY_DIR}/inih-config.cmake)
+set(targets_export_name inih-targets)
+
+
+# Generate the version, config and target files into the build directory.
+write_basic_package_version_file(
+  ${version_config}
+  VERSION 0.0.1
+  COMPATIBILITY AnyNewerVersion)
+configure_package_config_file(
+  ${PROJECT_SOURCE_DIR}/config.cmake.in
+  ${project_config}
+  INSTALL_DESTINATION ${config_install_dir})
+export(TARGETS inih FILE ${PROJECT_BINARY_DIR}/${targets_export_name}.cmake)
+
+install(TARGETS inih
+  EXPORT ${targets_export_name}
+  RUNTIME DESTINATION bin
+  LIBRARY DESTINATION lib
+  ARCHIVE DESTINATION lib)
+
+install(
+  FILES ${project_config} ${version_config}
+  DESTINATION ${config_install_dir})
+
+install(EXPORT ${targets_export_name}
+   DESTINATION ${config_install_dir})
+
+install(FILES cpp/INIReader.h DESTINATION include/inih)
